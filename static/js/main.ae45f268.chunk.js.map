{"version":3,"sources":["components/Header/Header.jsx","components/Blog/Title.jsx","components/Blog/Content.jsx","components/Blog/Comment.jsx","components/Home/Loader.jsx","components/Blog/Post.jsx","components/Home/Home.jsx","components/Error/ErrorPage.jsx","components/About/About.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","Title","title","image","timestamp","last_edit","src","alt","Content","text","dangerouslySetInnerHTML","__html","Comment","username","date","Loader","showLoader","Post","match","useState","blog","setBlog","comments","setComments","commenter","setCommenter","comment","setComment","setShowLoader","showPost","setShowPost","contentAsHTML","setContentAsHTML","useEffect","a","fetch","params","id","response","json","foundPost","fetchBlog","fetchComments","postComment","e","preventDefault","method","mode","headers","body","JSON","stringify","data","concat","document","length","map","key","_id","onSubmit","type","onChange","target","value","placeholder","name","cols","rows","required","Home","allPosts","setAllPosts","request","posts","fetchPosts","publishedPosts","filter","post","published","last_update","ErrorPage","style","margin","textAlign","color","About","marginTop","App","basename","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ae45f268.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Header() {\n    return (\n        <header>\n            <nav>\n                <ul className=\"left-list\">\n                    <li></li>\n                </ul>\n                <ul className=\"right-list\">\n                    <li>\n                        <Link to=\"/home\">Home</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/about\">About</Link>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    );\n}\n","import React from 'react';\n\nexport default function Title({ title, image, timestamp, last_edit }) {\n    return (\n        <article className=\"post-details\">\n            <h2>{title}</h2>\n            <figure>\n                <img\n                    src={\n                        image ||\n                        'https://via.placeholder.com/300x200.jpg/cedfdf/1d3557/?text=Blog+Doesn%27t+Have+An+Image+Yet'\n                    }\n                    alt=\"\"\n                    className=\"post-image\"\n                />\n                <figcaption>\n                    <p>\n                        <span className=\"date\">Posted on: {timestamp}</span> |\n                        <span className=\"last-edit\"> Last edit: {last_edit}</span>\n                    </p>\n                </figcaption>\n            </figure>\n        </article>\n    );\n}\n","import React from 'react';\n\nexport default function Content({ text }) {\n    return <article className=\"content\" dangerouslySetInnerHTML={{ __html: text }}></article>;\n}\n","import React from 'react';\n\nexport default function Comment({ username, date, text }) {\n    return (\n        <article className=\"comment\">\n            <h5>{username || 'Anonymous'}</h5>\n            <p className=\"text\">{text}</p>\n            <p className=\"date\">{date}</p>\n        </article>\n    );\n}\n","import React from 'react';\n\nexport default function Loader({ showLoader }) {\n    return <div className={showLoader ? 'loader' : 'loader inactive'}></div>;\n}\n","import React, { useState, useEffect } from 'react';\nimport Title from './Title';\nimport Content from './Content';\nimport Comment from './Comment';\nimport Loader from '../Home/Loader';\n\nexport default function Post({ match }) {\n    const [blog, setBlog] = useState({});\n    const [comments, setComments] = useState([]);\n    const [commenter, setCommenter] = useState('');\n    const [comment, setComment] = useState('');\n    const [showLoader, setShowLoader] = useState(true);\n    const [showPost, setShowPost] = useState(false);\n    const [contentAsHTML, setContentAsHTML] = useState('');\n\n    useEffect(() => {\n        const fetchBlog = async () => {\n            const response = await fetch(\n                `https://julio22b-blog-api-1.glitch.me/api/post/${match.params.id}`,\n            );\n            const blog = await response.json();\n            setBlog(blog.foundPost);\n            setContentAsHTML(blog.contentAsHTML);\n            setShowLoader(false);\n            setShowPost(true);\n        };\n        fetchBlog();\n\n        const fetchComments = async () => {\n            const response = await fetch(\n                `https://julio22b-blog-api-1.glitch.me/api/post/${match.params.id}/comments`,\n            );\n            const comments = await response.json();\n            setComments(comments);\n        };\n        fetchComments();\n    }, [match.params.id]);\n\n    const postComment = async (e) => {\n        e.preventDefault();\n        const response = await fetch(\n            `https://julio22b-blog-api-1.glitch.me/api/post/${match.params.id}/comments`,\n            {\n                method: 'post',\n                mode: 'cors',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ comment, commenter }),\n            },\n        );\n        const data = await response.json();\n        setComment('');\n        setCommenter('');\n        setComments(comments.concat(data.document));\n    };\n\n    return (\n        <>\n            <Loader showLoader={showLoader} />\n            <section className={showPost ? 'post' : 'hide'}>\n                <Title\n                    title={blog.title}\n                    timestamp={blog.timestamp}\n                    last_edit={blog.last_edit || `This post hasn't been edited yet`}\n                    image={blog.image}\n                />\n                <Content text={contentAsHTML} />\n                <div>\n                    <h4>Comments</h4>\n                    {comments.length ? (\n                        comments.map((comment) => (\n                            <Comment\n                                username={comment.username}\n                                text={comment.text}\n                                date={comment.timestamp}\n                                key={comment._id}\n                            />\n                        ))\n                    ) : (\n                        <p>This post has no comments yet.</p>\n                    )}\n                    <form className=\"add-comment\" onSubmit={(e) => postComment(e)}>\n                        <p>Leave a comment</p>\n                        <input\n                            type=\"text\"\n                            onChange={(e) => setCommenter(e.target.value)}\n                            value={commenter}\n                            placeholder=\"Name\"\n                        />\n                        <textarea\n                            name=\"comment\"\n                            cols=\"30\"\n                            rows=\"5\"\n                            onChange={(e) => setComment(e.target.value)}\n                            value={comment}\n                            required\n                            placeholder=\"Your comment...\"\n                        ></textarea>\n                        <button>Comment</button>\n                    </form>\n                </div>\n            </section>\n        </>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport Title from '../Blog/Title';\nimport Loader from './Loader';\nimport { Link } from 'react-router-dom';\n\nexport default function Home() {\n    const [allPosts, setAllPosts] = useState([]);\n    const [showLoader, setShowLoader] = useState(true);\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            const request = await fetch('https://julio22b-blog-api-1.glitch.me/api/posts');\n            const posts = await request.json();\n            setShowLoader(false);\n            setAllPosts(posts);\n        };\n        fetchPosts();\n    }, []);\n\n    const publishedPosts = allPosts.filter((post) => post.published);\n    return (\n        <>\n            <h1 className=\"page-h1\">My posts</h1>\n            <Loader showLoader={showLoader} />\n            <section className=\"home-section\">\n                {publishedPosts.map((post) => (\n                    <Link to={`/post/${post._id}`} className=\"home-article-links\" key={post._id}>\n                        <Title\n                            title={post.title}\n                            timestamp={post.timestamp}\n                            last_edit={post.last_update || `This post hasn't been edited yet`}\n                            image={post.image}\n                        />\n                    </Link>\n                ))}\n            </section>\n        </>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function ErrorPage() {\n    return (\n        <div>\n            <h2 style={style}>\n                Whoops. This page does not exist. Go back to <Link to=\"/home\">Home</Link>\n            </h2>\n        </div>\n    );\n}\n\nconst style = {\n    margin: '3em',\n    textAlign: 'center',\n    color: '#1d3557',\n};\n","import React from 'react';\n\nexport default function About() {\n    return <h2 style={style}>Not finished yet.</h2>;\n}\n\nconst style = {\n    textAlign: 'center',\n    marginTop: '100px',\n};\n","import React from 'react';\nimport './styles/style.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Post from './components/Blog/Post';\nimport Home from './components/Home/Home';\nimport ErrorPage from './components/Error/ErrorPage';\nimport About from './components/About/About';\n\nfunction App() {\n    return (\n        <Router basename=\"/blog-frontend\">\n            <Header />\n            <Switch>\n                <Route path=\"/home\" exact component={Home} />\n                <Route path=\"/about\" exact component={About} />\n                <Route path=\"/post/:id\" exact component={Post} />\n                <Route path=\"/\" component={ErrorPage} />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}